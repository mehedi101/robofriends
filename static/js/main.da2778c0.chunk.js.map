{"version":3,"sources":["components/Card.js","components/CardList.js","components/ErrorBoundry.js","components/SearchBox.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","username","className","src","alt","CardList","robots","map","ErrorBoundry","props","state","hasError","error","info","this","setState","children","Component","SearchBox","searchCange","type","placeholder","onChange","App","onSearchRobots","event","searchField","target","value","fetch","then","response","json","users","filterdRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAeeA,EAbF,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,GAAIC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,SAE5B,OAEI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BL,EAA1B,YAAwCM,IAAKH,IACrD,wCAAWF,EAAX,QACA,wCAAWC,EAAX,YCaGK,EAjBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OAEjB,OAEE,mCAEIA,EAAOC,KAAI,YAAgC,IAA9BT,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC5B,OAAU,cAAC,EAAD,CAAeH,GAAIA,EAAIC,KAAMA,EAAMC,MAAOA,EAAOC,SAAUA,GAAhDH,SCShBU,E,kDAnBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAOC,GAErBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAIzB,OACMG,KAAKJ,MAAMC,SAAiC,wDAAtBG,KAAKL,MAAMO,a,GAfpBC,aCYZC,EAXG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAChB,OAAS,qBAAKjB,UAAU,aAAf,SACL,uBACAA,UAAU,mCACVkB,KAAK,SACLC,YAAY,eACZC,SAAUH,OCoDHI,E,kDArDX,aAAe,IAAD,8BACV,gBAcJC,eAAiB,SAACC,GAEd,EAAKV,SAAS,CACVW,YAAaD,EAAME,OAAOC,SAhB9B,EAAKlB,MAAQ,CACTJ,OAAS,GACToB,YAAY,IAJN,E,gEAQM,IAAD,OACfG,MAAM,8CACLC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAK,SAAAG,GAAK,OAAI,EAAKlB,SAAS,CAACT,OAAQ2B,S,+BAehC,IAAD,EAE6BnB,KAAKJ,MAA5BJ,EAFN,EAEMA,OAAQoB,EAFd,EAEcA,YAETQ,EAAgB5B,EAAO6B,QAAO,SAACC,GACnC,OAAQA,EAAMrC,KAAKsC,cAAcC,SAASZ,EAAYW,kBAGxD,OAAc/B,EAAOiC,OAGrB,qCACI,yBAAQrC,UAAU,KAAlB,UACI,oBAAIA,UAAU,gBAAd,0BACA,cAAC,EAAD,CAAWiB,YAAaL,KAAKU,oBAEjC,qBAAKtB,UAAU,KAAf,SACA,cAAC,EAAD,UACI,cAAC,EAAD,CAAUI,OAAU4B,WAVE,6C,GAnCxBjB,aCMHuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.da2778c0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({id, name, email, username}) =>{\r\n\r\n    return (\r\n\r\n        <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\r\n            <img src={`https://robohash.org/${id}?200x200`} alt={username } />\r\n            <h3>Name: {name}  </h3>\r\n            <p>Email: {email}  </p>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({robots}) =>{\r\n\r\n  return (\r\n\r\n    <>\r\n    {\r\n        robots.map(({id, name, email, username})=>{\r\n          return    <Card key={id} id={id} name={name} email={email} username={username} />\r\n      })\r\n\r\n    }\r\n      \r\n  </>\r\n  )\r\n\r\n}\r\n\r\nexport default CardList;","import React, { Component } from 'react';\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            hasError: false\r\n         };\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            !(this.state.hasError)? this.props.children : <h1>Ooops. That's not good</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React from 'react';\r\n\r\nconst SearchBox = ({searchCange}) => {\r\n    return ( <div className='pa2 sticky'>\r\n        <input \r\n        className='pa3 ba b--green bg-lightest-blue' \r\n        type='search' \r\n        placeholder='search robot' \r\n        onChange={searchCange}\r\n        />\r\n    </div> );\r\n}\r\n \r\nexport default SearchBox;","import React, { Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport SearchBox from '../components/SearchBox';\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { \r\n            robots : [],\r\n            searchField:''\r\n         }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then( response => response.json())\r\n        .then(users => this.setState({robots: users}));\r\n\r\n    }\r\n\r\n    onSearchRobots = (event)=>{\r\n\r\n        this.setState({\r\n            searchField: event.target.value\r\n        });\r\n  \r\n\r\n    }\r\n\r\n\r\n\r\n    render() { \r\n\r\n            const {robots, searchField} = this.state;\r\n\r\n            const filterdRobots = robots.filter((robot)=>{\r\n              return  robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n            })\r\n\r\n            return (    (!robots.length)? <h1>Loading</h1> :    \r\n\r\n     \r\n            <>\r\n                <header className='tc'>\r\n                    <h1 className='f1 logo-title'>Robo Friends</h1>\r\n                    <SearchBox searchCange={this.onSearchRobots} />\r\n                </header>\r\n                <div className='tc'>\r\n                <ErrorBoundry>    \r\n                    <CardList robots = {filterdRobots}/>\r\n                </ErrorBoundry>\r\n                </div>\r\n               \r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}